openapi: 3.0.3
info:
  title: Finance Tracker API
  version: 1.0.0
  description: |
    The Finance Tracker API allows users to manage their financial data, including expenses, income, tags, and generate various financial reports. It provides endpoints to create, retrieve, update, and delete expense and income entries, manage blueprints for recurring transactions, categorize data with tags, and generate comprehensive financial summaries and projections.

servers:
  - url: https://api.financetracker.com/v1
    description: Production server

paths:
  /expense-entry:
    get:
      operationId: getExpenseEntries
      summary: Retrieve All Expense Entries
      description: |
        Fetch a list of all expense entries recorded in the system. This endpoint supports retrieving expenses without any filters.
      parameters:
        - name: month
          in: query
          required: false
          schema:
            type: string
            pattern: mm-yyyy
        - name: scheduleId
          in: query
          required: false
          schema:
            type: string
        - name: anyOfTags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: allOfTags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of expense entries retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseEntryResponse'
    post:
      operationId: createExpenseEntry
      summary: Create a New Expense Entry
      description: |
        Add a new expense entry to the system with the provided details, including amount, date, description, associated blueprint, and tags.
      requestBody:
        required: true
        description: Expense entry details to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseEntryCreateRequest'
      responses:
        '201':
          description: Expense entry created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseEntryResponse'

  /expense-entry/{entryId}:
    parameters:
      - $ref: '#/components/parameters/entryId'
    get:
      operationId: getExpenseEntryById
      summary: Retrieve a Specific Expense Entry
      description: |
        Fetch detailed information of a specific expense entry identified by its unique ID.
      responses:
        '200':
          description: Expense entry details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseEntryResponse'
        '404':
          description: Expense entry not found.
    put:
      operationId: updateExpenseEntry
      summary: Update an Existing Expense Entry
      description: |
        Update the details of an existing expense entry using its unique ID. Only the provided fields will be updated.
      requestBody:
        required: true
        description: Updated expense entry details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseEntryUpdateRequest'
      responses:
        '200':
          description: Expense entry updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseEntryResponse'
        '404':
          description: Expense entry not found.
    delete:
      operationId: deleteExpenseEntry
      summary: Delete an Expense Entry
      description: |
        Remove an existing expense entry from the system using its unique ID.
      responses:
        '204':
          description: Expense entry deleted successfully.
        '404':
          description: Expense entry not found.

  /expense-schedule:
    get:
      operationId: getExpenseSchedules
      summary: Retrieve All Expense Blueprints
      description: |
        Fetch a list of all expense blueprints. Blueprints are templates for recurring expense entries.
      tags:
        - expense-schedule
      responses:
        '200':
          description: A list of expense blueprints retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseScheduleResponse'
    post:
      operationId: createExpenseSchedule
      summary: Create a New Expense Blueprint
      description: |
        Add a new expense blueprint to the system with the provided details, including name, estimated amount, frequency, start and end dates, and associated tags.
      tags:
        - expense-schedule
      requestBody:
        required: true
        description: Expense blueprint details to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseScheduleCreateRequest'
      responses:
        '201':
          description: Expense blueprint created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseScheduleResponse'

  /expense-schedule/{blueprintId}:
    parameters:
      - $ref: '#/components/parameters/blueprintId'
    get:
      operationId: getExpenseScheduleById
      summary: Retrieve a Specific Expense Blueprint
      description: |
        Fetch detailed information of a specific expense blueprint identified by its unique ID.
      tags:
        - expense-schedule
      responses:
        '200':
          description: Expense blueprint details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseScheduleResponse'
        '404':
          description: Expense blueprint not found.
    put:
      operationId: updateExpenseSchedule
      summary: Update an Existing Expense Blueprint
      description: |
        Update the details of an existing expense blueprint using its unique ID. Only the provided fields will be updated.
      tags:
        - expense-schedule
      requestBody:
        required: true
        description: Updated expense blueprint details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseScheduleUpdateRequest'
      responses:
        '200':
          description: Expense blueprint updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseScheduleResponse'
        '404':
          description: Expense blueprint not found.
    delete:
      operationId: deleteExpenseSchedule
      summary: Delete an Expense Blueprint
      description: |
        Remove an existing expense blueprint from the system using its unique ID.
      tags:
        - expense-schedule
      responses:
        '204':
          description: Expense blueprint deleted successfully.
        '404':
          description: Expense blueprint not found.

  /expense-schedule/{blueprintId}/entries:
    parameters:
      - $ref: '#/components/parameters/blueprintId'
    get:
      operationId: getExpenseEntriesByScheduleId
      summary: Retrieve a Expense Entries by parent schedule id
      description: |
        Fetch a list of expense entries associated with the specified expense blueprint. This will return all entries that are generated based on the specified template.
      tags:
        - expense-entry
      responses:
        '200':
          description: Expenses entries details retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseEntryResponse'
        '404':
          description: Expense blueprint not found.

  /income-entry:
    get:
      operationId: getIncomeEntries
      summary: Retrieve All Income Entries
      description: |
        Fetch a list of all income entries recorded in the system. This endpoint supports retrieving incomes without any filters.
      responses:
        '200':
          description: A list of income entries retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncomeEntryResponse'
    post:
      operationId: createIncomeEntry
      summary: Create a New Income Entry
      description: |
        Add a new income entry to the system with the provided details, including amount, date, description, associated blueprint, and tags.
      requestBody:
        required: true
        description: Income entry details to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeEntryCreateRequest'
      responses:
        '201':
          description: Income entry created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeEntryResponse'

  /income-entry/{entryId}:
    parameters:
      - $ref: '#/components/parameters/entryId'
    get:
      operationId: getIncomeEntryById
      summary: Retrieve a Specific Income Entry
      description: |
        Fetch detailed information of a specific income entry identified by its unique ID.
      responses:
        '200':
          description: Income entry details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeEntryResponse'
        '404':
          description: Income entry not found.
    put:
      operationId: updateIncomeEntry
      summary: Update an Existing Income Entry
      description: |
        Update the details of an existing income entry using its unique ID. Only the provided fields will be updated.
      requestBody:
        required: true
        description: Updated income entry details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeEntryUpdateRequest'
      responses:
        '200':
          description: Income entry updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeEntryResponse'
        '404':
          description: Income entry not found.
    delete:
      operationId: deleteIncomeEntry
      summary: Delete an Income Entry
      description: |
        Remove an existing income entry from the system using its unique ID.
      responses:
        '204':
          description: Income entry deleted successfully.
        '404':
          description: Income entry not found.

  /income-blueprint:
    get:
      operationId: getIncomeBlueprints
      tags:
        - income-blueprint
      summary: Retrieve All Income Blueprints
      description: |
        Fetch a list of all income blueprints. Blueprints are templates for recurring income entries.
      responses:
        '200':
          description: A list of income blueprints retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncomeBlueprintResponse'
    post:
      operationId: createIncomeBlueprint
      tags:
        - income-blueprint
      summary: Create a New Income Blueprint
      description: |
        Add a new income blueprint to the system with the provided details, including name, estimated amount, frequency, start and end dates, and associated tags.
      requestBody:
        required: true
        description: Income blueprint details to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeBlueprintCreateRequest'
      responses:
        '201':
          description: Income blueprint created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeBlueprintResponse'

  /income-blueprint/{blueprintId}:
    parameters:
      - $ref: '#/components/parameters/blueprintId'
    get:
      operationId: getIncomeBlueprintById
      tags:
        - income-blueprint
      summary: Retrieve a Specific Income Blueprint
      description: |
        Fetch detailed information of a specific income blueprint identified by its unique ID.
      responses:
        '200':
          description: Income blueprint details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeBlueprintResponse'
        '404':
          description: Income blueprint not found.
    put:
      operationId: updateIncomeBlueprint
      tags:
        - income-blueprint
      summary: Update an Existing Income Blueprint
      description: |
        Update the details of an existing income blueprint using its unique ID. Only the provided fields will be updated.
      requestBody:
        required: true
        description: Updated income blueprint details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeBlueprintUpdateRequest'
      responses:
        '200':
          description: Income blueprint updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeBlueprintResponse'
        '404':
          description: Income blueprint not found.
    delete:
      operationId: deleteIncomeBlueprint
      tags:
        - income-blueprint
      summary: Delete an Income Blueprint
      description: |
        Remove an existing income blueprint from the system using its unique ID.
      responses:
        '204':
          description: Income blueprint deleted successfully.
        '404':
          description: Income blueprint not found.

  /tag:
    get:
      operationId: getTags
      tags:
        - tag
      summary: Retrieve All Tags
      description: |
        Fetch a list of all tags used to categorize expenses and incomes.
      responses:
        '200':
          description: A list of tags retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
    post:
      operationId: createTag
      tags:
        - tag
      summary: Create a New Tag
      description: |
        Add a new tag to the system for categorizing expenses and incomes.
      requestBody:
        required: true
        description: Tag details to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateRequest'
      responses:
        '201':
          description: Tag created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'

  /tag/{tagId}:
    parameters:
      - $ref: '#/components/parameters/tagId'
    get:
      operationId: getTagById
      tags:
        - tag
      summary: Retrieve a Specific Tag
      description: |
        Fetch detailed information of a specific tag identified by its unique ID.
      responses:
        '200':
          description: Tag details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '404':
          description: Tag not found.
    put:
      operationId: updateTag
      tags:
        - tag
      summary: Update an Existing Tag
      description: |
        Update the name of an existing tag using its unique ID.
      requestBody:
        required: true
        description: Updated tag details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdateRequest'
      responses:
        '200':
          description: Tag updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '404':
          description: Tag not found.
    delete:
      operationId: deleteTag
      tags:
        - tag
      summary: Delete a Tag
      description: |
        Remove an existing tag from the system using its unique ID.
      responses:
        '204':
          description: Tag deleted successfully.
        '404':
          description: Tag not found.

  /report/summary:
    get:
      operationId: getFinancialSummary
      #      tags:
      #        - blueprint-expense
      #        - blueprint-income
      summary: Retrieve Financial Summary
      description: |
        Generate a financial summary over a specified period, including total income, total expenses, and net balance.
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          description: Financial summary retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialSummaryResponse'

  /report/expenses-by-tag:
    get:
      operationId: getExpensesByTag
      summary: Retrieve Expenses Grouped by Tag
      description: |
        Generate a report of total expenses grouped by each tag over a specified period.
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          description: Expenses grouped by tag retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpensesByTagResponse'

  /report/income-by-source:
    get:
      operationId: getIncomeBySource
      summary: Retrieve Income Grouped by Source
      description: |
        Generate a report of total income grouped by each source over a specified period.
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          description: Income grouped by source retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncomeBySourceResponse'

  /report/cash-flow:
    get:
      operationId: getCashFlow
      summary: Retrieve Cash Flow Over Time
      description: |
        Generate a cash flow report over time based on the specified interval, start date, and end date.
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/interval'
      responses:
        '200':
          description: Cash flow data retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashFlowResponse'

  /report/projections:
    get:
      operationId: getFinancialProjections
      summary: Retrieve Financial Projections
      description: |
        Generate financial projections based on existing blueprints for a specified future period.
      parameters:
        - $ref: '#/components/parameters/futurePeriod'
      responses:
        '200':
          description: Financial projections retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialProjectionsResponse'

components:
  parameters:
    entryId:
      name: entryId
      in: path
      required: true
      description: The unique identifier of the entry.
      schema:
        type: string
    blueprintId:
      name: blueprintId
      in: path
      required: true
      description: The unique identifier of the blueprint.
      schema:
        type: string
    tagId:
      name: tagId
      in: path
      required: true
      description: The unique identifier of the tag.
      schema:
        type: string
    startDate:
      name: startDate
      in: query
      required: true
      description: Start date in YYYY-MM-DD format for filtering reports.
      schema:
        type: string
        format: date
    endDate:
      name: endDate
      in: query
      required: true
      description: End date in YYYY-MM-DD format for filtering reports.
      schema:
        type: string
        format: date
    interval:
      name: interval
      in: query
      required: false
      description: Time interval for cash flow data (DAILY, WEEKLY, MONTHLY).
      schema:
        $ref: '#/components/schemas/IntervalEnum'
    futurePeriod:
      name: futurePeriod
      in: query
      required: true
      description: Number of days to project into the future for financial projections.
      schema:
        type: integer
        format: int32

  schemas:
    # Enums
    FrequencyEnum:
      type: string
      description: Specifies the frequency of recurring transactions.
      enum:
        - DAILY
        - WEEKLY
        - MONTHLY
        - YEARLY

    IntervalEnum:
      type: string
      description: Specifies the interval for cash flow data.
      enum:
        - DAILY
        - WEEKLY
        - MONTHLY

    EstimatedAmountTypeEnum:
      type: string
      description: Specifies the type of estimated amount for blueprints.
      enum:
        - FIXED
        - RANGE
        - VARIANCE_AMOUNT
        - VARIANCE_PERCENT

    # Expense Entry Schemas
    ExpenseEntryResponse:
      type: object
      description: Represents an expense entry in the system.
      properties:
        id:
          type: string
          description: Unique identifier of the expense entry.
        amount:
          type: number
          format: double
          description: The amount of the expense.
        date:
          type: string
          format: date
          description: The date when the expense was incurred.
        name:
          type: string
          description: The name of the expense entry.
        blueprintId:
          type: string
          nullable: true
          description: The ID of the associated expense blueprint, if any.
        tags:
          type: array
          description: A list of tag IDs associated with the expense.
          items:
            type: string
      required:
        - id
        - amount
        - date

    ExpenseEntryCreateRequest:
      type: object
      description: Payload for creating a new expense entry.
      properties:
        amount:
          type: number
          format: double
          description: The amount of the expense.
        date:
          type: string
          format: date
          description: The date when the expense was incurred.
        name:
          type: string
          description: A brief description of the expense.
        blueprintId:
          type: string
          nullable: true
          description: The ID of the associated expense blueprint, if any.
        tags:
          type: array
          description: A list of tag IDs to categorize the expense.
          items:
            type: string
      required:
        - amount
        - date

    ExpenseEntryUpdateRequest:
      type: object
      description: Payload for updating an existing expense entry.
      properties:
        amount:
          type: number
          format: double
          description: The updated amount of the expense.
        date:
          type: string
          format: date
          description: The updated date when the expense was incurred.
        name:
          type: string
          description: The updated description of the expense.
        blueprintId:
          type: string
          nullable: true
          description: The updated ID of the associated expense blueprint, if any.
        tags:
          type: array
          description: The updated list of tag IDs associated with the expense.
          items:
            type: string

    # Expense Blueprint Schemas
    ExpenseScheduleResponse:
      type: object
      description: Represents an expense blueprint in the system.
      properties:
        id:
          type: string
          description: Unique identifier of the expense blueprint.
        name:
          type: string
          description: The name of the expense blueprint.
        estimatedAmount:
          $ref: '#/components/schemas/EstimatedAmount'
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        startDate:
          type: string
          format: date
          nullable: true
          description: The optional start date for the expense blueprint.
        endDate:
          type: string
          format: date
          nullable: true
          description: The optional end date for the expense blueprint.
        tags:
          type: array
          description: A list of tag IDs associated with the blueprint.
          items:
            type: string
      required:
        - id
        - name
        - estimatedAmount
        - frequency

    ExpenseScheduleCreateRequest:
      type: object
      description: Payload for creating a new expense blueprint.
      properties:
        name:
          type: string
          description: The name of the expense blueprint.
        estimatedAmount:
          $ref: '#/components/schemas/EstimatedAmount'
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        startDate:
          type: string
          format: date
          nullable: true
          description: The start date for the expense blueprint.
        endDate:
          type: string
          format: date
          nullable: true
          description: The optional end date for the expense blueprint.
        tags:
          type: array
          description: A list of tag IDs to associate with the blueprint.
          items:
            type: string
      required:
        - name
        - estimatedAmount
        - frequency

    ExpenseScheduleUpdateRequest:
      type: object
      description: Payload for updating an existing expense blueprint.
      properties:
        name:
          type: string
          description: The updated name of the expense blueprint.
        estimatedAmount:
          $ref: '#/components/schemas/EstimatedAmount'
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        startDate:
          type: string
          format: date
          nullable: true
          description: The updated start date for the expense blueprint.
        endDate:
          type: string
          format: date
          nullable: true
          description: The updated optional end date for the expense blueprint.
        tags:
          type: array
          description: The updated list of tag IDs associated with the blueprint.
          items:
            type: string

    # Polymorphic EstimatedAmount Schema
    EstimatedAmount:
      type: object
      description: Represents the estimated amount for a blueprint, supporting multiple estimation types.
      properties:
        type:
          $ref: '#/components/schemas/EstimatedAmountTypeEnum'
      discriminator:
        propertyName: type
        mapping:
          FIXED: '#/components/schemas/FixedAmount'
          RANGE: '#/components/schemas/RangeAmount'
          VARIANCE_AMOUNT: '#/components/schemas/VarianceAmount'
          VARIANCE_PERCENT: '#/components/schemas/VariancePercent'
      required:
        - type


    FixedAmount:
      type: object
      description: Represents a fixed estimated amount.
      allOf:
        - $ref: '#/components/schemas/EstimatedAmount'
      properties:
        amount:
          type: number
          format: double
          description: The fixed amount value.
      required:
        - type
        - amount

    RangeAmount:
      type: object
      description: Represents a range-based estimated amount.
      allOf:
        - $ref: '#/components/schemas/EstimatedAmount'
      properties:
        min:
          type: number
          format: double
          description: The minimum estimated amount.
        max:
          type: number
          format: double
          description: The maximum estimated amount.
      required:
        - type
        - min
        - max

    VarianceAmount:
      type: object
      description: Represents an estimated amount with a variance in absolute terms.
      allOf:
        - $ref: '#/components/schemas/EstimatedAmount'
      properties:
        amount:
          type: number
          format: double
          description: The base amount.
        variance:
          type: number
          format: double
          description: The variance to apply to the base amount.
      required:
        - type
        - amount
        - variance

    VariancePercent:
      type: object
      description: Represents an estimated amount with a variance in percentage terms.
      allOf:
        - $ref: '#/components/schemas/EstimatedAmount'
      properties:
        amount:
          type: number
          format: double
          description: The base amount.
        variancePercent:
          type: number
          format: double
          description: The variance percentage to apply to the base amount.
      required:
        - type
        - amount
        - variancePercent

    # Income Entry Schemas
    IncomeEntryResponse:
      type: object
      description: Represents an income entry in the system.
      properties:
        id:
          type: string
          description: Unique identifier of the income entry.
        amount:
          type: number
          format: double
          description: The amount of the income.
        date:
          type: string
          format: date
          description: The date when the income was received.
        description:
          type: string
          description: A brief description of the income.
        blueprintId:
          type: string
          nullable: true
          description: The ID of the associated income blueprint, if any.
      required:
        - id
        - amount
        - date

    IncomeEntryCreateRequest:
      type: object
      description: Payload for creating a new income entry.
      properties:
        amount:
          type: number
          format: double
          description: The amount of the income.
        date:
          type: string
          format: date
          description: The date when the income was received.
        description:
          type: string
          description: A brief description of the income.
        blueprintId:
          type: string
          nullable: true
          description: The ID of the associated income blueprint, if any.
      required:
        - amount
        - date

    IncomeEntryUpdateRequest:
      type: object
      description: Payload for updating an existing income entry.
      properties:
        amount:
          type: number
          format: double
          description: The updated amount of the income.
        date:
          type: string
          format: date
          description: The updated date when the income was received.
        description:
          type: string
          description: The updated description of the income.
        blueprintId:
          type: string
          nullable: true
          description: The updated ID of the associated income blueprint, if any.

    # Income Blueprint Schemas
    IncomeBlueprintResponse:
      type: object
      description: Represents an income blueprint in the system.
      properties:
        id:
          type: string
          description: Unique identifier of the income blueprint.
        name:
          type: string
          description: The name of the income blueprint.
        estimatedAmount:
          $ref: '#/components/schemas/EstimatedAmount'
        startDate:
          type: string
          format: date
          nullable: true
          description: The start date for the income blueprint.
        endDate:
          type: string
          format: date
          nullable: true
          description: The optional end date for the income blueprint.
      required:
        - id
        - name
        - estimatedAmount
        - frequency

    IncomeBlueprintCreateRequest:
      type: object
      description: Payload for creating a new income blueprint.
      properties:
        name:
          type: string
          description: The name of the income blueprint.
        estimatedAmount:
          $ref: '#/components/schemas/EstimatedAmount'
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        startDate:
          type: string
          format: date
          nullable: true
          description: The start date for the income blueprint.
        endDate:
          type: string
          format: date
          nullable: true
          description: The optional end date for the income blueprint.
      required:
        - name
        - estimatedAmount
        - frequency

    IncomeBlueprintUpdateRequest:
      type: object
      description: Payload for updating an existing income blueprint.
      properties:
        name:
          type: string
          description: The updated name of the income blueprint.
        estimatedAmount:
          $ref: '#/components/schemas/EstimatedAmount'
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        startDate:
          type: string
          format: date
          nullable: true
          description: The updated start date for the income blueprint.
        endDate:
          type: string
          format: date
          nullable: true
          description: The updated optional end date for the income blueprint.
      required:
        - name
        - estimatedAmount
        - frequency

    # Tag Schemas
    TagResponse:
      type: object
      description: Represents a tag used to categorize expenses and incomes.
      properties:
        id:
          type: string
          description: Unique identifier of the tag.
        name:
          type: string
          description: The name of the tag.
      required:
        - id
        - name

    TagCreateRequest:
      type: object
      description: Payload for creating a new tag.
      properties:
        name:
          type: string
          description: The name of the tag.
      required:
        - name

    TagUpdateRequest:
      type: object
      description: Payload for updating an existing tag.
      properties:
        name:
          type: string
          description: The updated name of the tag.
      required:
        - name

    # Reporting Schemas
    FinancialSummaryResponse:
      type: object
      description: Represents a financial summary over a specified period.
      properties:
        totalIncome:
          type: number
          format: double
          description: The total income during the specified period.
        totalExpenses:
          type: number
          format: double
          description: The total expenses during the specified period.
        netBalance:
          type: number
          format: double
          description: The net balance calculated as total income minus total expenses.
      required:
        - totalIncome
        - totalExpenses
        - netBalance

    ExpensesByTagResponse:
      type: object
      description: Represents total expenses grouped by each tag.
      properties:
        tagId:
          type: string
          description: The unique identifier of the tag.
        tagName:
          type: string
          description: The name of the tag.
        totalAmount:
          type: number
          format: double
          description: The total amount of expenses associated with the tag.
      required:
        - tagId
        - tagName
        - totalAmount

    IncomeBySourceResponse:
      type: object
      description: Represents total income grouped by each source.
      properties:
        sourceId:
          type: string
          description: The unique identifier of the income source.
        sourceName:
          type: string
          description: The name of the income source.
        totalAmount:
          type: number
          format: double
          description: The total amount of income associated with the source.
      required:
        - sourceId
        - sourceName
        - totalAmount

    CashFlowResponse:
      type: object
      description: Represents cash flow data points over time.
      properties:
        dataPoints:
          type: array
          description: A list of cash flow data points.
          items:
            type: object
            properties:
              date:
                type: string
                format: date
                description: The date of the cash flow data point.
              netBalance:
                type: number
                format: double
                description: The net balance on the specified date.
            required:
              - date
              - netBalance
      required:
        - dataPoints

    FinancialProjectionsResponse:
      type: object
      description: Represents financial projections based on existing blueprints.
      properties:
        projectedIncome:
          type: number
          format: double
          description: The projected total income for the future period.
        projectedExpenses:
          type: number
          format: double
          description: The projected total expenses for the future period.
        projectedNetBalance:
          type: number
          format: double
          description: The projected net balance calculated as projected income minus projected expenses.
        details:
          type: array
          description: Detailed projections for each date in the future period.
          items:
            type: object
            properties:
              date:
                type: string
                format: date
                description: The date of the projection.
              income:
                type: number
                format: double
                description: The projected income on the specified date.
              expenses:
                type: number
                format: double
                description: The projected expenses on the specified date.
              netBalance:
                type: number
                format: double
                description: The projected net balance on the specified date.
            required:
              - date
              - income
              - expenses
              - netBalance
      required:
        - projectedIncome
        - projectedExpenses
        - projectedNetBalance
        - details
